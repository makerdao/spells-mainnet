// SPDX-FileCopyrightText: Â© 2023 Dai Foundation <www.daifoundation.org>
// SPDX-License-Identifier: AGPL-3.0-or-later
//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU Affero General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU Affero General Public License for more details.
//
// You should have received a copy of the GNU Affero General Public License
// along with this program.  If not, see <https://www.gnu.org/licenses/>.
pragma solidity 0.8.16;

contract EsmExceptions {

    bytes32[] public exceptions;

    constructor() {
        exceptions = [           // Why?
            bytes32("MCD_ESM"),  // Self-referential
            "PROXY_DEPLOYER",    // Ecosystem tool
            "WETH",              // External contract, not PP ward
            "ETH",               // External contract, not PP ward
            // Everything after this should be evaluated for security
            "LERP_FAB",
            "ILK_REGISTRY",
            "MCD_CAT",
            "MCD_FLAP",
            "MCD_CLIP_CALC_BAT_A",
            "MCD_CLIP_CALC_COMP_A",
            "MCD_CLIP_CALC_ETH_A",
            "MCD_CLIP_CALC_KNC_A",
            "MCD_CLIP_CALC_LINK_A",
            "MCD_CLIP_CALC_LRC_A",
            "MCD_CLIP_CALC_MANA_A",
            "MCD_CLIP_CALC_PAXUSD_A",
            "MCD_CLIP_CALC_TUSD_A",
            "MCD_CLIP_CALC_USDC_A",
            "MCD_CLIP_CALC_USDC_B",
            "MCD_CLIP_CALC_USDT_A",
            "MCD_CLIP_CALC_WBTC_A",
            "MCD_CLIP_CALC_ZRX_A",
            "MCD_FLOP",
            "MCD_JOIN_BAT_A",
            "MCD_JOIN_COMP_A",
            "MCD_JOIN_ETH_A",
            "MCD_JOIN_KNC_A",
            "MCD_JOIN_LINK_A",
            "MCD_JOIN_LRC_A",
            "MCD_JOIN_MANA_A",
            "MCD_JOIN_PAXUSD_A",
            "MCD_JOIN_TUSD_A",
            "MCD_JOIN_USDC_A",
            "MCD_JOIN_USDC_B",
            "MCD_JOIN_USDT_A",
            "MCD_JOIN_WBTC_A",
            "MCD_JOIN_ZRX_A",
            "MCD_JUG",
            "MCD_POT",
            "MCD_SPOT",
            "MCD_VOW",
            "PIP_BAT",
            "PIP_COMP",
            "PIP_ETH",
            "PIP_KNC",
            "PIP_LINK",
            "PIP_LRC",
            "PIP_MANA",
            "PIP_USDT",
            "PIP_WBTC",
            "PIP_ZRX",
            "MCD_JOIN_ETH_B",
            "MCD_CLIP_CALC_ETH_B",
            "PIP_BAL",
            "MCD_JOIN_BAL_A",
            "MCD_CLIP_CALC_BAL_A",
            "PIP_YFI",
            "MCD_JOIN_YFI_A",
            "MCD_CLIP_CALC_YFI_A",
            "MCD_JOIN_GUSD_A",
            "MCD_CLIP_CALC_GUSD_A",
            "MCD_JOIN_UNI_A",
            "MCD_CLIP_CALC_UNI_A",
            "PIP_UNI",
            "MCD_JOIN_RENBTC_A",
            "MCD_CLIP_CALC_RENBTC_A",
            "PIP_RENBTC",
            "MCD_IAM_AUTO_LINE",
            "MCD_JOIN_AAVE_A",
            "MCD_CLIP_CALC_AAVE_A",
            "PIP_AAVE",
            "MCD_JOIN_UNIV2DAIETH_A",
            "MCD_CLIP_CALC_UNIV2DAIETH_A",
            "PIP_UNIV2DAIETH",
            "MCD_JOIN_PSM_USDC_A",
            "MCD_CLIP_CALC_PSM_USDC_A",
            "MCD_PSM_USDC_A",
            "MCD_JOIN_UNIV2WBTCETH_A",
            "MCD_CLIP_CALC_UNIV2WBTCETH_A",
            "PIP_UNIV2WBTCETH",
            "MCD_JOIN_UNIV2USDCETH_A",
            "MCD_CLIP_CALC_UNIV2USDCETH_A",
            "PIP_UNIV2USDCETH",
            "MCD_JOIN_UNIV2DAIUSDC_A",
            "MCD_CLIP_CALC_UNIV2DAIUSDC_A",
            "PIP_UNIV2DAIUSDC",
            "MCD_JOIN_UNIV2ETHUSDT_A",
            "MCD_CLIP_CALC_UNIV2ETHUSDT_A",
            "PIP_UNIV2ETHUSDT",
            "MCD_JOIN_UNIV2LINKETH_A",
            "MCD_CLIP_CALC_UNIV2LINKETH_A",
            "PIP_UNIV2LINKETH",
            "MCD_JOIN_UNIV2UNIETH_A",
            "MCD_CLIP_CALC_UNIV2UNIETH_A",
            "PIP_UNIV2UNIETH",
            "MCD_JOIN_UNIV2WBTCDAI_A",
            "MCD_CLIP_CALC_UNIV2WBTCDAI_A",
            "PIP_UNIV2WBTCDAI",
            "MCD_JOIN_UNIV2AAVEETH_A",
            "MCD_CLIP_CALC_UNIV2AAVEETH_A",
            "PIP_UNIV2AAVEETH",
            "MCD_JOIN_UNIV2DAIUSDT_A",
            "MCD_CLIP_CALC_UNIV2DAIUSDT_A",
            "PIP_UNIV2DAIUSDT",
            "MCD_JOIN_RWA001_A",
            "RWA001_A_URN",
            "RWA001_A_OUTPUT_CONDUIT",
            "MCD_JOIN_ETH_C",
            "MCD_CLIP_CALC_ETH_C",
            "MCD_JOIN_RWA002_A",
            "RWA002_A_URN",
            "MCD_DOG",
            "MCD_FLASH",
            "MCD_JOIN_RWA003_A",
            "RWA003_A_URN",
            "MCD_JOIN_RWA004_A",
            "RWA004_A_URN",
            "MCD_JOIN_RWA005_A",
            "RWA005_A_URN",
            "MCD_JOIN_RWA006_A",
            "RWA006_A_URN",
            "MCD_JOIN_PSM_PAX_A",
            "MCD_CLIP_CALC_PSM_PAX_A",
            "MCD_PSM_PAX_A",
            "MCD_JOIN_MATIC_A",
            "MCD_CLIP_CALC_MATIC_A",
            "PIP_MATIC",
            "MCD_VEST_DAI",
            "MCD_VEST_MKR",
            "MCD_JOIN_GUNIV3DAIUSDC1_A",
            "MCD_CLIP_CALC_GUNIV3DAIUSDC1_A",
            "PIP_GUNIV3DAIUSDC1",
            "MCD_VEST_MKR_TREASURY",
            "PIP_WSTETH",
            "MCD_JOIN_WSTETH_A",
            "MCD_CLIP_CALC_WSTETH_A",
            "RWA013_A_URN",
            "MCD_JOIN_RWA013_A",
            "MCD_JOIN_WBTC_B",
            "MCD_CLIP_CALC_WBTC_B",
            "MCD_JOIN_WBTC_C",
            "MCD_CLIP_CALC_WBTC_C",
            "MCD_JOIN_PSM_GUSD_A",
            "MCD_CLIP_CALC_PSM_GUSD_A",
            "MCD_PSM_GUSD_A",
            "MCD_JOIN_GUNIV3DAIUSDC2_A",
            "MCD_CLIP_CALC_GUNIV3DAIUSDC2_A",
            "PIP_GUNIV3DAIUSDC2",
            "PIP_CRVV1ETHSTETH",
            "MCD_CLIP_CALC_CRVV1ETHSTETH_A",
            "MCD_JOIN_WSTETH_B",
            "MCD_CLIP_CALC_WSTETH_B",
            "MCD_CURE",
            "MCD_JOIN_RWA008_A",
            "RWA008_A_URN",
            "RWA008_A_INPUT_CONDUIT",
            "RWA008_A_OUTPUT_CONDUIT",
            "MCD_JOIN_RWA009_A",
            "RWA009_A_URN",
            "RWA009_A_OUTPUT_CONDUIT",
            "MCD_JOIN_RWA007_A",
            "RWA007_A_URN",
            "RWA007_A_JAR_INPUT_CONDUIT",
            "RWA007_A_INPUT_CONDUIT",
            "RWA007_A_OUTPUT_CONDUIT",
            "PIP_RETH",
            "MCD_JOIN_RETH_A",
            "MCD_CLIP_CALC_RETH_A",
            "DIRECT_HUB",
            "DIRECT_COMPV2_DAI_POOL",
            "DIRECT_COMPV2_DAI_PLAN",
            "DIRECT_COMPV2_DAI_ORACLE",
            "PIP_GNO",
            "MCD_JOIN_GNO_A",
            "MCD_CLIP_CALC_GNO_A",
            "MCD_JOIN_RWA010_A",
            "RWA010_A_URN",
            "MCD_JOIN_RWA011_A",
            "RWA011_A_URN",
            "MCD_JOIN_RWA012_A",
            "RWA012_A_URN",
            "DIRECT_AAVEV2_DAI_POOL",
            "DIRECT_AAVEV2_DAI_PLAN",
            "DIRECT_AAVEV2_DAI_ORACLE"
        ];
    }

    function count() external view returns (uint256) {
        return exceptions.length;
    }

    function list() external view returns (bytes32[] memory) {
        return exceptions;
    }
}
