// SPDX-License-Identifier: UNLICENSED
pragma solidity ^0.8.13;

import "forge-std/Script.sol";
import "forge-std/console.sol";



contract DeployAgreement is Script {
    address constant FACTORY = 0x9d211CaC1ce390F676d1cB1D2Eb681410EC47E47;

    // Deploying empty agreement
    bytes rawCalldata = hex'a0f526bb0000000000000000000000000000000000000000000000000000000000000040000000000000000000000000195a7d8610edd06e0c27c006b6970319133cb19a00000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000e000000000000000000000000000000000000000000000000000000000000001e000000000000000000000000000000000000000000000000000000000000003c000000000000000000000000000000000000000000000000000000000000006800000000000000000000000000000000000000000000000000000000000000003536b7900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000080000000000000000000000000000000000000000000000000000000000000000c436f6e74616374204e616d650000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000c436f6e7461637440496e666f000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000c00000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000002a307830303030303030303030303030303030303030303030303030303030303030303030303030303232000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002a30786441304162316530303137444562436437324265383539393034316132616133624137653734304600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000a00000000000000000000000000000000000000000000000000000000009896800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000001ee4b594320616e642053616e6374696f6e732053637265656e696e672e20536b7920616e64205374617273207265717569726520616c6c20656c696769626c652077686974656861747320746f20756e646572676f204b6e6f7720596f757220437573746f6d657220284b59432920766572696669636174696f6e20616e642062652073637265656e656420616761696e737420676c6f62616c2073616e6374696f6e73206c697374732c20696e636c7564696e67204f4641432c20554b2c20616e6420455520726567756c6174696f6e732e205468697320656e7375726573207468617420626f756e747920726563697069656e7473206d656574206c6567616c20616e6420726567756c61746f7279207374616e6461726473206265666f7265207175616c696679696e6720666f72207061796d656e742e2054686520766572696669636174696f6e2070726f63657373207368616c6c20626520636f6e647563746564206279206120747275737465642074686972642d70617274792070726f766964657220617420536b7920616e642053746172732064697363726574696f6e2c20616e6420616c6c20646174612069732064656c657465642c206966207375636365737366756c2c2077697468696e203330206461797320706f73742d766572696669636174696f6e2e000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000d41677265656d656e742055524900000000000000000000000000000000000000';

    function run() external {
        vm.startBroadcast();

        //Call create function with the calldata
        (bool success, bytes memory result) = FACTORY.call(rawCalldata);
        if (!success) {
            revert(string(result));
        }

        // Log the deployed agreement address
        address agreement = abi.decode(result, (address));
        console.log("Agreement deployed at:", agreement);

        vm.stopBroadcast();
    }
}
